local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/newredz/RedzLibV5/main/Source.lua"))()

-- Wait until the library is fully loaded
repeat task.wait() until redzlib

-- Create the window
local Window = redzlib:MakeWindow({
    Title = "Recoil.GG : Dead-Rails",
    SubTitle = "by Viper x Tanny",
    SaveFolder = "redz Hub | Blox Fruits.lua"
})

-- Correct way to create a tab
local Main = Window:MakeTab({
    Title = "Tab Visual",
    Description = "Info",
    Icon = "user",
})

local Aimbot = Window:MakeTab({
    Title = "Tab Aim Helper",
    Description = "Info",
    Icon = "box",
})

local Player = Window:MakeTab({
    Title = "Player",
    Description = "settings",
    Icon = "swords",
})

local Setting = Window:MakeTab({
    Title = "Settings",
    Description = "settings",
    Icon = "box",
})

local v22 = Instance.new("ScreenGui")
local v23 = Instance.new("ImageButton")
local v24 = Instance.new("UICorner")
local v25 = Instance.new("ParticleEmitter")
local v26 = game:GetService("TweenService")

v22.Parent = game.CoreGui
v22.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

v23.Parent = v22
v23.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
v23.BorderSizePixel = 0
v23.Position = UDim2.new(0.1, 0, 0.1, 0)  -- Position of the floating button
v23.Size = UDim2.new(0, 50, 0, 50)  -- Size of the floating logo
v23.Draggable = true  -- Makes it draggable
v23.Image = "rbxassetid://101883839381557"  -- Fixed image ID (removed extra digits)

v24.Parent = v23
v24.CornerRadius = UDim.new(1, 0)  -- Round corners

v25.Parent = v23
v25.LightEmission = 1
v25.Size = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0.1),
    NumberSequenceKeypoint.new(1, 0)
})
v25.Lifetime = NumberRange.new(0.5, 1)
v25.Rate = 0
v25.Speed = NumberRange.new(5, 10)
v25.Color = ColorSequence.new(Color3.fromRGB(255, 85, 255), Color3.fromRGB(85, 255, 255))  -- Particle colors

-- Animation on button press
v23.MouseButton1Down:Connect(function()
    v25.Rate = 100  -- Start emitting particles
    
    -- Toggle UI visibility
    if Window.Enabled then
        Window:Minimize(true)
    else
        Window:Minimize(false)
    end
    
    task.delay(1, function()
        v25.Rate = 0  -- Stop emitting after 1 second
    end)
end)

-- Optional Tween effect for smooth appearance
local v47 = v26:Create(v23, TweenInfo.new(0.5, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {
    Position = UDim2.new(0.1, 0, 0.1, 0),
    Size = UDim2.new(0, 50, 0, 50),
    BackgroundTransparency = 0.2
})
v47:Play()

-- Cham Color dropdown
Main:AddDropdown({
    Name = "Cham Color",
    Flag = "Visual/ChamColor",
    Default = "Red",
    Options = { "Red", "Blue", "Green", "Yellow", "Purple", "White" },
    Callback = function(option)
        local colors = {
            Red = Color3.fromRGB(255, 0, 0),
            Blue = Color3.fromRGB(0, 0, 255),
            Green = Color3.fromRGB(0, 255, 0),
            Yellow = Color3.fromRGB(255, 255, 0),
            Purple = Color3.fromRGB(170, 0, 255),
            White = Color3.fromRGB(255, 255, 255)
        }
        getgenv().ChamColor = colors[option] or Color3.fromRGB(255, 0, 0)

        -- Live update existing chams
        if getgenv().PlayerChams then
            for _, highlight in pairs(getgenv().PlayerChams) do
                if highlight and highlight:IsA("Highlight") then
                    highlight.FillColor = getgenv().ChamColor
                    highlight.OutlineColor = getgenv().ChamColor
                end
            end
        end
    end
})

-- Esp Players Toggle
Main:AddToggle({
    Name = "Esp Players",
    Flag = "Visual/EspPlayers",
    Default = false,
    Callback = function(Value)
        getgenv().EspPlayers = Value

        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        getgenv().PlayerChams = getgenv().PlayerChams or {}
        local chams = getgenv().PlayerChams

        local function addCham(player)
            if player == LocalPlayer or chams[player] then return end
            local char = player.Character
            if not char or not char:FindFirstChild("HumanoidRootPart") then return end

            local highlight = Instance.new("Highlight")
            highlight.Name = "PlayerCham"
            highlight.FillColor = Color3.fromRGB(255, 0, 0)
            highlight.OutlineColor = Color3.fromRGB(255, 0, 0)
            highlight.FillTransparency = 0.5
            highlight.OutlineTransparency = 0
            highlight.Adornee = char
            highlight.Parent = char

            chams[player] = highlight
        end

        local function removeCham(player)
            if chams[player] then
                chams[player]:Destroy()
                chams[player] = nil
            end
        end

        local function enableChams()
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer then
                    addCham(player)
                end
                player.CharacterAdded:Connect(function()
                    task.wait(1)
                    if getgenv().EspPlayers then
                        addCham(player)
                    end
                end)
            end

            Players.PlayerAdded:Connect(function(player)
                player.CharacterAdded:Connect(function()
                    task.wait(1)
                    if getgenv().EspPlayers then
                        addCham(player)
                    end
                end)
            end)
        end

        local function disableChams()
            for player, highlight in pairs(chams) do
                if highlight then highlight:Destroy() end
            end
            table.clear(chams)
        end

        if Value then
            enableChams()
        else
            disableChams()
        end
    end
})


Aimbot:AddButton({
    Title = "Aimbot + Esp Combo",
    Description = "Recommended Full Aimbot NPC",
    Callback = function()
        -- Execute the script from the URL
        loadstring(game:HttpGet("https://raw.githubusercontent.com/viperobii/ViperisEnot/refs/heads/main/ViperIsGodHehe.txt"))()
        
    end
})



Main:AddToggle({
    Name = "ESP Objects",
    Flag = "Visual/ESPObjects",
    Default = false,
    Callback = function(ESPValue)
        getgenv().ESPObjects = ESPValue

        local Connection = {}
        local Highlight_Folder = game.CoreGui:FindFirstChild("Highlight_Folder") or Instance.new("Folder")
        Highlight_Folder.Name = "Highlight_Folder"
        Highlight_Folder.Parent = game.CoreGui

        local function Highlight(v)
            if v:FindFirstChild("ObjectInfo") and v.ObjectInfo:FindFirstChild("TextLabel") or v:FindFirstChild("Equippable") then
                local labelText = v.ObjectInfo:FindFirstChild("TextLabel") and v.ObjectInfo.TextLabel.Text or ""
                if string.find(string.lower(labelText), "valuable")
                or string.find(string.lower(labelText), "currency")
                or string.find(string.lower(labelText), "melee")
                or string.find(string.lower(labelText), "gun")
                or string.find(string.lower(labelText), "weapon")
                or string.find(string.lower(labelText), "equippable")
                or string.find(string.lower(labelText), "light source")
                or string.find(string.lower(labelText), "consumable")
                or string.find(string.lower(labelText), "weld to use")
                or string.find(string.lower(labelText), "bulletproof")
                or string.find(string.lower(labelText), "tool")
                or string.find(string.lower(labelText), "attracts lightning but makes it harmless")
                or string.find(string.lower(labelText), "ammo")
                or string.find(string.lower(labelText), "fuel") then

                    local Highlight = Instance.new("Highlight")
                    Highlight.Name = v.Name
                    Highlight.FillColor = Color3.fromRGB(255, 215, 0)
                    Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    Highlight.FillTransparency = 0.7
                    Highlight.OutlineColor = Color3.fromRGB(0, 255, 0)
                    Highlight.Parent = Highlight_Folder

                    local Billboard = Instance.new("BillboardGui")
                    Billboard.Name = "ESP_Billboard"
                    Billboard.Parent = v
                    Billboard.Adornee = v
                    Billboard.Size = UDim2.new(0, 25, 0, 25)
                    Billboard.StudsOffset = Vector3.new(0, 1, 0)
                    Billboard.AlwaysOnTop = true

                    local TextLabel = Instance.new("TextLabel")
                    TextLabel.Parent = Billboard
                    TextLabel.Size = UDim2.new(1, 0, 1, 0)
                    TextLabel.Text = v.Name
                    TextLabel.TextColor3 = Color3.fromRGB(92, 46, 46)
                    TextLabel.TextSize = 10
                    TextLabel.BackgroundTransparency = 1
                    TextLabel.TextStrokeTransparency = 0
                    TextLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

                    if v:IsA("BasePart") then
                        Highlight.Adornee = v
                    elseif v:IsA("Model") then
                        Connection[v] = v.DescendantAdded:Connect(function(Descendant)
                            if Descendant:IsA("BasePart") then
                                Highlight.Adornee = Descendant
                            end
                        end)
                    end
                end
            end
        end

        if ESPValue then
            for _, v in ipairs(workspace.RuntimeItems:GetDescendants()) do
                if v:IsA("Model") or v:IsA("BasePart") then
                    Highlight(v)
                end
            end

            Connection["Added"] = workspace.RuntimeItems.DescendantAdded:Connect(function(v)
                if v:IsA("Model") or v:IsA("BasePart") then
                    Highlight(v)
                end
            end)

            Connection["Removed"] = workspace.RuntimeItems.DescendantRemoving:Connect(function(v)
                if Highlight_Folder:FindFirstChild(v.Name) then
                    Highlight_Folder[v.Name]:Destroy()
                end
                if v:FindFirstChild("ESP_Billboard") then
                    v.ESP_Billboard:Destroy()
                end
                if Connection[v] then
                    Connection[v]:Disconnect()
                    Connection[v] = nil
                end
            end)
        else
            for _, v in ipairs(Highlight_Folder:GetChildren()) do
                v:Destroy()
            end
            for _, v in ipairs(workspace.RuntimeItems:GetDescendants()) do
                if v:FindFirstChild("ESP_Billboard") then
                    v.ESP_Billboard:Destroy()
                end
            end
            for _, v in pairs(Connection) do
                v:Disconnect()
            end
            table.clear(Connection)
        end
    end
})



Main:AddToggle({
    Name = "Auto Collect Items + Guns",
    Flag = "Items/AutoCollectValuableItems",
    Description = "Snake Oi, Bandage, Revolver, Shotgun, Rifle, Newspaper",
    Default = false,
    Callback = function(Value)
        if getgenv().AutoCollectValuableItems then
            getgenv().AutoCollectValuableItems:Disconnect()
            getgenv().AutoCollectValuableItems = nil
        end
        if Value then
            getgenv().AutoCollectValuableItems = game:GetService("RunService").Heartbeat:Connect(function()
                local player = game.Players.LocalPlayer
                local character = player.Character
                if not character or not character:FindFirstChild("Humanoid") or character.Humanoid.Health <= 0 then return end
                local rootPart = character:FindFirstChild("HumanoidRootPart")
                if not rootPart then return end

                for _, item in ipairs(workspace.RuntimeItems:GetChildren()) do
                    local itemNameList = {"snake oil", "bandage", "revolver", "shotgun", "rifle", "newspaper"}
                    for _, keyword in ipairs(itemNameList) do
                        if string.find(item.Name:lower(), keyword) then
                            local pos = item:IsA("BasePart") and item.Position or (item:IsA("Model") and item:GetPivot().Position)
                            if not pos and item.PrimaryPart then pos = item.PrimaryPart.Position end
                            if pos and (pos - rootPart.Position).Magnitude <= 17 then
                                if item:FindFirstChild("ObjectInfo") and item.ObjectInfo:FindFirstChild("TextLabel") then
                                    if player.Backpack:FindFirstChild("Sack") then
                                        character.Humanoid:EquipTool(player.Backpack:FindFirstChild("Sack"))
                                    end
                                    game.ReplicatedStorage.Remotes.StoreItem:FireServer(item)
                                end
                            end
                        end
                    end
                end
            end)
        end
    end
})

Items:AddDropdown({
    Name = "Bypass Modes",
    Description = "Safety Purposes",
    Flag = "Items/CollectionMode",
    Options = {"SafeMode", "Normal Mode"},
    CurrentOption = "SafeMode",
    Callback = function(Option)
        -- Mode selected: Option
    end
})


Setting:AddToggle({
    Name = "No Fog",
    Flag = "Settings/NoFog",
    Default = false,
    Callback = function(Value)
        local lighting = game:GetService("Lighting")
        getgenv().FogConnection = getgenv().FogConnection or nil
        getgenv().OriginalFogEnd = getgenv().OriginalFogEnd or lighting.FogEnd
        getgenv().OriginalFogStart = getgenv().OriginalFogStart or lighting.FogStart
        getgenv().OriginalFogColor = getgenv().OriginalFogColor or lighting.FogColor
        getgenv().OriginalAtmosphere = getgenv().OriginalAtmosphere or (lighting:FindFirstChildOfClass("Atmosphere") and lighting:FindFirstChildOfClass("Atmosphere"):Clone())

        local function removeFog()
            if lighting:FindFirstChildOfClass("Atmosphere") then
                lighting:FindFirstChildOfClass("Atmosphere"):Destroy()
            end
            lighting.FogEnd = 1e6
            lighting.FogStart = 1e6
            getgenv().FogConnection = game:GetService("RunService").RenderStepped:Connect(function()
                lighting.FogEnd = 1e6
                lighting.FogStart = 1e6
                if lighting:FindFirstChildOfClass("Atmosphere") then
                    lighting:FindFirstChildOfClass("Atmosphere"):Destroy()
                end
            end)
        end

        local function restoreFog()
            if getgenv().FogConnection then
                getgenv().FogConnection:Disconnect()
                getgenv().FogConnection = nil
            end
            lighting.FogEnd = getgenv().OriginalFogEnd
            lighting.FogStart = getgenv().OriginalFogStart
            lighting.FogColor = getgenv().OriginalFogColor
            if getgenv().OriginalAtmosphere and not lighting:FindFirstChildOfClass("Atmosphere") then
                local restored = getgenv().OriginalAtmosphere:Clone()
                restored.Parent = lighting
            end
        end

        if Value then
            removeFog()
        else
            restoreFog()
        end

        game.Players.LocalPlayer.OnTeleport:Connect(function()
            if getgenv().FogConnection then
                getgenv().FogConnection:Disconnect()
            end
        end)
    end
})


Setting:AddToggle({
    Name = "Full Bright",
    Flag = "Settings/FullBright",
    Default = false,
    Callback = function(Value)
        local lighting = game:GetService("Lighting")
        getgenv().FullBrightConnection = getgenv().FullBrightConnection or nil
        getgenv().OriginalBrightness = getgenv().OriginalBrightness or lighting.Brightness
        getgenv().OriginalClockTime = getgenv().OriginalClockTime or lighting.ClockTime
        getgenv().OriginalAmbient = getgenv().OriginalAmbient or lighting.Ambient
        getgenv().OriginalOutdoorAmbient = getgenv().OriginalOutdoorAmbient or lighting.OutdoorAmbient
        getgenv().OriginalColorShiftTop = getgenv().OriginalColorShiftTop or lighting.ColorShift_Top
        getgenv().OriginalColorShiftBottom = getgenv().OriginalColorShiftBottom or lighting.ColorShift_Bottom
        getgenv().OriginalShadows = getgenv().OriginalShadows or lighting.GlobalShadows
        getgenv().OriginalExposure = getgenv().OriginalExposure or lighting.ExposureCompensation

        local function enableFullBright()
            lighting.Brightness = 2
            lighting.ClockTime = 14
            lighting.Ambient = Color3.new(1, 1, 1)
            lighting.OutdoorAmbient = Color3.new(1, 1, 1)
            lighting.ColorShift_Top = Color3.new(1, 1, 1)
            lighting.ColorShift_Bottom = Color3.new(1, 1, 1)
            lighting.GlobalShadows = false
            lighting.ExposureCompensation = 0.5

            for _, effect in pairs(lighting:GetChildren()) do
                if effect:IsA("BloomEffect") or effect:IsA("BlurEffect") or effect:IsA("ColorCorrectionEffect") or effect:IsA("SunRaysEffect") then
                    effect.Enabled = false
                end
            end

            getgenv().FullBrightConnection = game:GetService("RunService").RenderStepped:Connect(function()
                lighting.Brightness = 2
                lighting.ClockTime = 14
                lighting.GlobalShadows = false
            end)
        end

        local function restoreFullBright()
            if getgenv().FullBrightConnection then
                getgenv().FullBrightConnection:Disconnect()
                getgenv().FullBrightConnection = nil
            end

            lighting.Brightness = getgenv().OriginalBrightness
            lighting.ClockTime = getgenv().OriginalClockTime
            lighting.Ambient = getgenv().OriginalAmbient
            lighting.OutdoorAmbient = getgenv().OriginalOutdoorAmbient
            lighting.ColorShift_Top = getgenv().OriginalColorShiftTop
            lighting.ColorShift_Bottom = getgenv().OriginalColorShiftBottom
            lighting.GlobalShadows = getgenv().OriginalShadows
            lighting.ExposureCompensation = getgenv().OriginalExposure

            for _, effect in pairs(lighting:GetChildren()) do
                if effect:IsA("BloomEffect") or effect:IsA("BlurEffect") or effect:IsA("ColorCorrectionEffect") or effect:IsA("SunRaysEffect") then
                    effect.Enabled = true
                end
            end
        end

        if Value then
            enableFullBright()
        else
            restoreFullBright()
        end

        game.Players.LocalPlayer.OnTeleport:Connect(function()
            if getgenv().FullBrightConnection then
                getgenv().FullBrightConnection:Disconnect()
            end
        end)
    end
})



getgenv().FpsBoost = false
getgenv().OriginalFpsSettings = {}

Setting:AddToggle({
    Name = "FPS Boost",
    Flag = "Settings/FPSBoost",
    Default = false,
    Callback = function(Value)
        getgenv().FpsBoost = Value
        if Value then
            local Lighting = game:GetService("Lighting")
            getgenv().OriginalFpsSettings.FogEnd = Lighting.FogEnd
            getgenv().OriginalFpsSettings.Brightness = Lighting.Brightness
            getgenv().OriginalFpsSettings.GlobalShadows = Lighting.GlobalShadows
            getgenv().OriginalFpsSettings.Ambient = Lighting.Ambient

            Lighting.FogEnd = 100
            Lighting.Brightness = 0
            Lighting.GlobalShadows = false
            Lighting.Ambient = Color3.fromRGB(0, 0, 0)

            for _, obj in pairs(workspace:GetDescendants()) do
                if obj:IsA("BasePart") then
                    obj.Material = Enum.Material.Plastic
                    obj.Reflectance = 0
                    obj.CastShadow = false
                elseif obj:IsA("Decal") or obj:IsA("Texture") then
                    obj:Destroy()
                end
            end

            for _, v in pairs(Lighting:GetChildren()) do
                if v:IsA("PostEffect") then
                    v.Enabled = false
                end
            end

        else
            local Lighting = game:GetService("Lighting")
            local settings = getgenv().OriginalFpsSettings
            Lighting.FogEnd = settings.FogEnd or 100000
            Lighting.Brightness = settings.Brightness or 2
            Lighting.GlobalShadows = settings.GlobalShadows ~= false
            Lighting.Ambient = settings.Ambient or Color3.fromRGB(128, 128, 128)

            -- Notify that some visuals like decals might not restore
            warn("FPS Boost disabled - some visuals may not return without rejoin.")
        end
    end
})


getgenv().AutoCollectValuableItemsConnection = nil

Items:AddToggle({
    Name = "Auto Collect Valuable Items",
    Flag = "Items/AutoCollectValuableItems",
    Description = "Gold, Werewolf, Vampire, Wire, Silver, Cannon, Sheetmetal, Coal, Turret Ammo",
    Default = false,
    Callback = function(Value)
        if getgenv().AutoCollectValuableItemsConnection then
            getgenv().AutoCollectValuableItemsConnection:Disconnect()
            getgenv().AutoCollectValuableItemsConnection = nil
        end

        if Value then
            getgenv().AutoCollectValuableItemsConnection = game:GetService("RunService").Heartbeat:Connect(function()
                local player = game.Players.LocalPlayer
                local character = player.Character
                if not character or not character:FindFirstChild("Humanoid") or character.Humanoid.Health <= 0 then return end
                local rootPart = character:FindFirstChild("HumanoidRootPart")
                if not rootPart then return end

                local valuables = {"gold", "silver", "turretammo", "werewolf", "coal", "cannon", "vampire", "sheetmetal", "wire"}

                for _, item in ipairs(workspace.RuntimeItems:GetChildren()) do
                    local isValuable = false
                    for _, name in ipairs(valuables) do
                        if string.find(item.Name:lower(), name) then
                            isValuable = true
                            break
                        end
                    end

                    if isValuable then
                        local itemPosition
                        if item:IsA("BasePart") then
                            itemPosition = item.Position
                        elseif item:IsA("Model") then
                            itemPosition = item:GetPivot().Position
                        elseif item.PrimaryPart then
                            itemPosition = item.PrimaryPart.Position
                        end

                        if itemPosition then
                            local distance = (itemPosition - rootPart.Position).Magnitude
                            if distance <= 17 then
                                if item:FindFirstChild("ObjectInfo") and item.ObjectInfo:FindFirstChild("TextLabel") then
                                    local sack = player.Backpack:FindFirstChild("Sack")
                                    if sack then
                                        character.Humanoid:EquipTool(sack)
                                    end
                                    game.ReplicatedStorage.Remotes.StoreItem:FireServer(item)
                                end
                            end
                        end
                    end
                end
            end)
        end
    end
})



-- FOV Dropdown
Player:AddDropdown({
    Name = "Select FOV",
    Flag = "Settings/FOVDropdown",
    Options = {"60", "100", "120"},
    CurrentOption = "100",  -- Default FOV
    Callback = function(Option)
        if game.Workspace.CurrentCamera then
            game.Workspace.CurrentCamera.FieldOfView = tonumber(Option)
        end
    end
})

-- FOV Toggle
Player:AddToggle({
    Name = "Field Person View FOV",
    Flag = "Settings/FOVToggle",
    Default = false,
    Callback = function(State)
        if State then
            -- Enable custom FOV
            game.Workspace.CurrentCamera.FieldOfView = 100
        else
            -- Reset to default FOV
            game.Workspace.CurrentCamera.FieldOfView = 70
        end
    end
})
