--// Mobile-Friendly Fly Script for Blox Fruits //
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local flying = false
local flySpeed = 50
local upsideDown = false

local bodyGyro = Instance.new("BodyGyro")
local bodyVelocity = Instance.new("BodyVelocity")

--// Fly Button //
v16.Player:AddButton({
    Title = "Fly Toggle",
    Description = "Enable or disable flying",
    Callback = function()
        flying = not flying
        if flying then
            startFlying()
        else
            stopFlying()
        end
    end
})

--// Fly Function //
function startFlying()
    bodyGyro.Parent = humanoidRootPart
    bodyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
    bodyGyro.CFrame = humanoidRootPart.CFrame
    
    bodyVelocity.Parent = humanoidRootPart
    bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    
    local connection
    connection = RunService.RenderStepped:Connect(function()
        if not flying then
            bodyGyro:Destroy()
            bodyVelocity:Destroy()
            connection:Disconnect()
        else
            local moveDirection = Vector3.new()
            
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveDirection = moveDirection + humanoidRootPart.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveDirection = moveDirection - humanoidRootPart.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveDirection = moveDirection - humanoidRootPart.CFrame.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveDirection = moveDirection + humanoidRootPart.CFrame.RightVector end
            
            if upsideDown then
                bodyGyro.CFrame = humanoidRootPart.CFrame * CFrame.Angles(math.rad(180), 0, 0)
            else
                bodyGyro.CFrame = humanoidRootPart.CFrame
            end
            
            bodyVelocity.Velocity = moveDirection * flySpeed
        end
    end)
end

function stopFlying()
    flying = false
end
